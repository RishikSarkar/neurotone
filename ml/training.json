{
  "project": "Neurotone Dementia Detection",
  "environment": {
    "name": "neurotone",
    "python_version": "3.10",
    "setup_commands": [
      "conda create -n neurotone python=3.10",
      "conda activate neurotone",
      "pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118",
      "conda install -c conda-forge librosa ipykernel jupyter",
      "pip install transformers datasets tqdm matplotlib seaborn scikit-learn"
    ],
    "key_dependencies": {
      "torch": "2.1.0+cu118",
      "transformers": "4.36.0",
      "librosa": "0.10.1",
      "scikit-learn": "1.3.2"
    }
  },
  "data": {
    "structure": {
      "root": "/d:/Cornell/Academic/Spring 2025/Startup Studio/MVP/neurotone/ml",
      "data_dir": "data/dementia-net",
      "dementia_dir": "data/dementia-net/dementia",
      "nodementia_dir": "data/dementia-net/nodementia",
      "processed_dir": "data/processed"
    },
    "audio_format": {
      "format": "WAV",
      "target_sampling_rate": 16000,
      "max_length_seconds": 10
    },
    "dementia_naming_pattern": "{FirstLast}_{YearsToOnset}.wav",
    "nodementia_naming_pattern": "{FirstLast}_{SequenceNumber}.wav",
    "splits": {
      "train": 0.7,
      "validation": 0.15,
      "test": 0.15
    },
    "preprocessing": {
      "convert_to_mono": true,
      "resample_to_16khz": true,
      "normalize_audio": true,
      "trim_silence": true
    }
  },
  "model": {
    "base_model": "microsoft/wavlm-base-plus",
    "alternative_model": "microsoft/wavlm-large",
    "architecture": {
      "type": "WavLMForSequenceClassification",
      "custom_classifier": true,
      "pooling_strategy": "mean",
      "hidden_size": 768,
      "classification_layers": [768, 256, 2]
    },
    "advantages": [
      "Captures prosodic anomalies common in early dementia",
      "Pre-trained on 94K hours of speech data",
      "Superior masking strategy compared to Wav2Vec2",
      "Validated for health-related speech analysis"
    ]
  },
  "training": {
    "approach": "transfer_learning",
    "phases": [
      {
        "name": "feature_extractor_frozen",
        "epochs": 3,
        "learning_rate": 5e-5,
        "batch_size": 8,
        "description": "Train with frozen WavLM feature extractor"
      },
      {
        "name": "fine_tuning",
        "epochs": 5,
        "learning_rate": 1e-5,
        "batch_size": 8,
        "description": "Fine-tune the entire model with lower learning rate"
      }
    ],
    "optimizer": {
      "type": "AdamW",
      "weight_decay": 0.01
    },
    "scheduler": {
      "type": "linear_with_warmup",
      "warmup_steps": "10% of training steps"
    },
    "augmentation": {
      "techniques": [
        "AddBackgroundNoise(p=0.3)",
        "TimeStretch(min_rate=0.8, max_rate=1.2, p=0.5)",
        "PitchShift(±4 semitones, p=0.5)",
        "RandomVolume(±10dB, p=0.3)"
      ]
    },
    "evaluation": {
      "metrics": [
        "accuracy",
        "precision",
        "recall",
        "f1-score",
        "confusion_matrix",
        "roc_auc"
      ],
      "early_stopping": {
        "patience": 3,
        "monitor": "val_f1"
      }
    }
  },
  "inference": {
    "pipeline": {
      "input": "Raw WAV audio",
      "preprocessing": "Same as training preprocessing",
      "feature_extraction": "WavLM embeddings",
      "classification": "Linear classifier outputs probability",
      "output": "Binary classification with confidence score"
    },
    "optimizations": {
      "quantization": "8-bit for faster inference",
      "batch_processing": true,
      "caching": "Cache embeddings for repeated analysis"
    },
    "deployment": {
      "format": "torchscript",
      "api_protocol": "REST",
      "platforms": ["Windows", "Linux", "Potential mobile support"]
    }
  },
  "performance": {
    "expected_metrics": {
      "accuracy": "85-90%",
      "f1_score": "0.83-0.88",
      "inference_time": "<100ms per 5s audio on GPU"
    },
    "hardware_requirements": {
      "training": "NVIDIA GPU with 8GB+ VRAM (RTX 3060 or better)",
      "inference": "Can run on CPU, but GPU recommended"
    }
  }
}
